/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

@import url("chrome://browser/skin/browser-shared.css");
@import url("chrome://browser/skin/contextmenu.css");
@import url("chrome://browser/skin/browser-custom-colors.css");

@namespace html url("http://www.w3.org/1999/xhtml");

:root {
  --sidebar-border-color: ThreeDLightShadow;
}

#menubar-items {
  flex-direction: column; /* for flex hack */
  justify-content: normal; /* align the menubar to the top also in customize mode */
}

#main-menubar > menu {
  appearance: none;
  color: inherit;

  &[_moz-menuactive] {
    background-color: light-dark(hsla(0,0%,0%,.12), hsla(0,0%,100%,.22));
    color: inherit;

    @media (prefers-contrast) {
      background-color: -moz-menuhover;
      color: -moz-menuhovertext;
    }
  }
}

@media (-moz-windows-accent-color-in-titlebar) {
  :root[tabsintitlebar] {
    /* stylelint-disable-next-line media-query-no-invalid */
    @media (-moz-bool-pref: "browser.theme.windows.accent-color-in-tabs.enabled") {
      --toolbox-non-lwt-bgcolor: ActiveCaption;
      --toolbox-non-lwt-textcolor: CaptionText;
      --toolbox-non-lwt-bgcolor-inactive: InactiveCaption;
      --toolbox-non-lwt-textcolor-inactive: InactiveCaptionText;

      &:not([lwtheme]) #TabsToolbar {
        /* These colors match the Linux/HCM default button colors. We need to
         * override these on the tabs toolbar because the accent color is
         * arbitrary, so the hardcoded colors from browser-custom-colors might
         * not provide sufficient contrast. */
        --toolbarbutton-icon-fill: currentColor;
        --toolbarbutton-hover-background: color-mix(in srgb, currentColor 17%, transparent);
        --toolbarbutton-active-background: color-mix(in srgb, currentColor 30%, transparent);
      }
    }

    &[sizemode="normal"] #navigator-toolbox {
      border-top: .5px solid ActiveBorder;
      &:-moz-window-inactive {
        border-top-color: InactiveBorder;
      }
    }
  }
}

/* Use a different color only on Windows 8 and higher in inactive windows.
 * On Win 7, the menubar fog disappears for inactive windows, and renders gray
 * illegible.
 */
@media (-moz-windows-default-theme) {
  @media not (-moz-platform: windows-win7) {
    #toolbar-menubar:not([lwtheme]):-moz-window-inactive {
      color: ThreeDShadow;
    }
  }
}

@media not (-moz-platform: windows-win7) {
  @media not (-moz-platform: windows-win8) {
    /* On Windows 10, when temporarily showing the menu bar, make it at least as
     * tall as the tab bar such that the window controls don't appear to move up. */
    :root[tabsintitlebar] #toolbar-menubar[autohide="true"] {
      height: var(--tab-min-height);
    }
  }
}

/* Add 4px extra margin on top of the tabs toolbar on Windows 7. */
@media (-moz-platform: windows-win7) {
  :root[sizemode="normal"][chromehidden~="menubar"] #TabsToolbar > .toolbar-items,
  :root[sizemode="normal"] #toolbar-menubar[autohide="true"][inactive] + #TabsToolbar > .toolbar-items {
    padding-top: 4px;
  }
}

/* Add a fog for background tabs to be visible on Windows 7 glass window background */
@media (-moz-platform: windows-win7) {
  @media (-moz-windows-default-theme) {
    #TabsToolbar:not([lwtheme]) {
      background-image: radial-gradient(ellipse at bottom, rgba(255,255,255,0.8), rgba(255,255,255,0.5) 40%, transparent);
    }
  }
}

@media not (-moz-windows-compositor),
       not (-moz-windows-default-theme),
       (-moz-platform: windows-win8) {
  /* Please keep the menu text colors in this media block in sync with
   * light-dark-overrides.css, minus the :not([lwtheme]) condition - see Bug 1165718.
   */
  :root[tabsintitlebar]:not([lwtheme]) {
    color: CaptionText;
  }

  :root[tabsintitlebar]:not([lwtheme]):-moz-window-inactive {
    color: InactiveCaptionText;
  }
}

@media (-moz-windows-classic) {
  /**
   * In the classic themes, the titlebar has a horizontal gradient, which is
   * problematic for reading the text of background tabs when they're in the
   * titlebar. We side-step this issue by layering our own background underneath
   * the tabs.
   */
  :root[tabsintitlebar]:not([sizemode=fullscreen]) #TabsToolbar:not([lwtheme]) {
    background-image: linear-gradient(transparent, ActiveCaption);
    background-size: auto 200%;
  }

  :root[tabsintitlebar]:not([sizemode=fullscreen]) #TabsToolbar:not([lwtheme]):-moz-window-inactive {
    background-image: linear-gradient(transparent, InactiveCaption);
  }

  /* Add a window top border for webextension themes */
  :root[lwtheme][tabsintitlebar][sizemode="normal"] #navigator-toolbox {
    background-image: linear-gradient(to bottom,
          ThreeDLightShadow 0, ThreeDLightShadow 1px,
          ThreeDHighlight 1px, ThreeDHighlight 2px,
          ActiveBorder 2px, ActiveBorder 4px, transparent 4px);
  }

  :root[tabsintitlebar] :is(#TabsToolbar, #toolbar-menubar) toolbarbutton:not([lwtheme]) {
    color: inherit;
  }
}

/* Titlebar */

:root[tabsintitlebar][sizemode="normal"] #titlebar {
  appearance: auto;
  -moz-default-appearance: -moz-window-titlebar;
}

:root[tabsintitlebar][sizemode="maximized"] #titlebar {
  appearance: auto;
  -moz-default-appearance: -moz-window-titlebar-maximized;
}

@media (-moz-windows-classic) {
  :root[tabsintitlebar][sizemode="normal"] #toolbar-menubar {
    margin-top: 4px;
  }
}

.titlebar-buttonbox {
  /* For all Windows configurations except for Windows Aero and Windows Aero Basic,
   * the default -moz-default-appearance of -moz-window-button-box and
   * -moz-window-button-box-maximized adds unwanted margins to the button box. We
   * special case Windows Aero and Windows Aero Basic in browser-aero.css.
   */
  appearance: none;
  /* The button box must appear on top of the navigator-toolbox in order for
   * click and hover mouse events to work properly for the button in the restored
   * window state. Otherwise, elements in the navigator-toolbox, like the menubar,
   * can swallow those events. It will also place the buttons above the fog on
   * Windows 7 with Aero Glass.
   */
  z-index: 1;
}

.titlebar-buttonbox-container {
  align-items: stretch;
}

@media (-moz-platform: windows-win7),
       (-moz-platform: windows-win8) {
  /* Preserve window control buttons position at the top of the button box. */
  .titlebar-buttonbox-container {
    align-items: flex-start;
  }
}

/* Window control buttons */

.titlebar-min {
  appearance: auto;
  -moz-default-appearance: -moz-window-button-minimize;
}

.titlebar-max {
  appearance: auto;
  -moz-default-appearance: -moz-window-button-maximize;
}

.titlebar-restore {
  appearance: auto;
  -moz-default-appearance: -moz-window-button-restore;
}

.titlebar-close {
  appearance: auto;
  -moz-default-appearance: -moz-window-button-close;
}

@media not (-moz-windows-classic) {
  .titlebar-min {
    margin-inline-end: 2px;
  }
}

:root[tabletmode] .titlebar-min,
:root[tabletmode] .titlebar-restore,
:root[tabletmode] .titlebar-max {
  display: none;
}

/* Bookmark menus */

.bookmark-item {
  &:is(menu, menuitem) {
    min-width: 0;
    max-width: 32em;
  }

  &:not(.subviewbutton) > .menu-iconic-left {
    margin-block: 0;
  }

  &[cutting] {
    > .toolbarbutton-icon,
    > .menu-iconic-left > .menu-iconic-icon {
      opacity: 0.5;
    }

    > .toolbarbutton-text,
    > .menu-iconic-left > .menu-iconic-text {
      opacity: 0.7;
    }
  }

  &:is(toolbarbutton)[dragover="true"][open="true"] {
    appearance: none;
    background: SelectedItem !important;
    color: SelectedItemText !important;
    fill: SelectedItemText;
  }
}

/* Bookmarks roots menu-items */

#bookmarksToolbarFolderMenu,
#BMB_bookmarksToolbar,
#panelMenu_bookmarksToolbar {
  list-style-image: url("chrome://browser/skin/places/bookmarksToolbar.svg");
}

/* Address bar */

#urlbar,
#searchbar {
  font-size: 1.15em;
}

/* stylelint-disable-next-line media-query-no-invalid */
@media (-moz-bool-pref: "browser.urlbar.experimental.expandTextOnFocus") {
  #urlbar[breakout-extend] {
    font-size: 1.25em;
  }
}

@media not (-moz-windows-default-theme) {
  :root {
    /* Windows HCM conventions use these colors for chiclets. We can't use them on
       other platforms because AccentColor can be shown atop SelectedItem,
       which has zero contrast. */
    --urlbar-box-hover-bgcolor: SelectedItem;
    --urlbar-box-active-bgcolor: SelectedItem;
    --urlbar-box-hover-text-color: SelectedItemText;
  }

  :root:not([lwtheme]) {
    #urlbar:not([focused]) > #urlbar-background,
    #searchbar:not(:focus-within),
    .findbar-textbox:not(:focus) {
      border-color: ThreeDShadow;
    }
  }
}

/* Address bar results view */

@media not (-moz-windows-default-theme) {
  :root:not([lwtheme]) {
    --urlbar-popup-action-color: LinkText;
  }
}

/* Autocomplete */

#PopupAutoComplete > richlistbox > richlistitem[originaltype~="datalist-first"] {
  border-top: 1px solid ThreeDShadow;
}

/* Tabstrip */

#TabsToolbar {
  min-height: 0;
  padding: 0;
}

@media not (-moz-windows-default-theme) {
  /* For high contrast themes. */
  #tabbrowser-tabpanels,
  :root[privatebrowsingmode=temporary] #tabbrowser-tabpanels {
    background-color: -moz-default-background-color;
  }
}

/* All tabs menupopup */

.alltabs-item[selected="true"] {
  font-weight: bold;
}

#UITourTooltipButtons {
  /**
   * Override the --arrowpanel-padding so the background extends
   * to the sides and bottom of the panel.
   */
  margin-inline: -10px;
  margin-bottom: -10px;
}

/* Make menu items larger when opened through touch. */
panel[touchmode],
menupopup[touchmode] {
  --arrowpanel-menuitem-padding-block: 12px;
  --arrowpanel-menuitem-padding: var(--arrowpanel-menuitem-padding-block) var(--arrowpanel-menuitem-padding-inline);
  /* The value for the header back icon padding is selected in a way that the
   * height of the header and its separator will be equal to the panel inner
   * top padding plus standard menuitem, so that the header's separator will
   * be located excatly where a normal toolbarseparator would be located after
   * the first menuitem, in a menu without a header. */
  --arrowpanel-header-back-icon-padding: 10px;
}

:root[uidensity="compact"] panel[touchmode] {
  --arrowpanel-header-back-icon-padding: 12px;
}

menupopup[touchmode] :is(menu, menuitem, menucaption) {
  /* Use the var set in the rule above to increase menu items height in menupopups when
   * they are opened through touch.
   * Panel menu items already have their padding set in panelUI-shared.css with the same var. */
  padding-block: var(--arrowpanel-menuitem-padding-block);
}

#contentAreaContextMenu[touchmode] > #context-navigation > menuitem {
  /* The navigation menuitems are bigger to begin with because of their inner padding,
   * so calculate the padding-block to match normal menuitems height when in touchmode.
   * 3.5em is the desired menuitem height (~42px), minus the menuitem actual height devided by 2. */
  padding-block: calc((3.5em - 32px) / 2);
}

#context-navigation {
  background-color: menu;
}

#context-sep-navigation {
  margin-inline-start: -28px;
}

@media (-moz-windows-non-native-menus) {
  /* :not([hidden]) to avoid the display: flex unhiding the item. */
  #context-navigation:not([hidden]) {
    /* The Windows 10 version of the navigation area needs the scrollbox's
       background color, not the builtin "menu" color. */
    background-color: inherit;
    /* Match the inner top padding of the menupopup to center the icons visually. */
    padding-bottom: 4px;
    /* Use modern flex box so we can use percentage widths to redistribute
     * spacing manually. */
    display: flex;
    flex-direction: row;
    /* We want the first and last icons to align with the text items which
     * have 1em inline padding, and for icons to be centered within their
     * hover state, so each icon of 16px needs 1em padding on both sides:
     */
    --menuitem-min-width: calc(2em + 16px);
    /* The total width of the container should then be at least 4 times that: */
    min-width: calc(4 * var(--menuitem-min-width));
  }

  #context-navigation > .menuitem-iconic {
    flex: 1 0 auto;
  }

  #context-navigation > .menuitem-iconic[_moz-menuactive="true"] {
    /* We only show hover state on the icons. This ensures there is no
     * dead space between icons, but the visible hover state is only
     * around the icons, and all the icons' hover states match each other.
     */
    background-color: transparent;
  }

  #context-navigation > .menuitem-iconic > .menu-iconic-left {
    margin: 0;
    padding: 0;
  }

  /* override styles from shared/contextmenu.inc.css */
  #context-navigation > .menuitem-iconic > .menu-iconic-left > .menu-iconic-icon {
    width: var(--menuitem-min-width);
    height: 32px;
    padding: 8px 1em;
    margin: 0;
  }
  #context-navigation > .menuitem-iconic[_moz-menuactive="true"] > .menu-iconic-left > .menu-iconic-icon {
    background-color: -moz-menuhover;
  }

  #context-navigation > .menuitem-iconic[_moz-menuactive="true"][disabled="true"] > .menu-iconic-left > .menu-iconic-icon {
    background-color: -moz-menuhoverdisabled;
  }

  /* If the menu is wider than the icons strictly need, the <menuitem> elements
   * will stretch to pick up the extra space. In that case, the outer icons
   * should align to the start/end of their containing <menuitem>: */
  #context-navigation > .menuitem-iconic:first-child {
    justify-content: flex-start;
  }

  #context-navigation > .menuitem-iconic:last-child {
    justify-content: flex-end;
  }

  #context-navigation > .menuitem-iconic:last-child,
  #context-navigation > .menuitem-iconic:first-child {
    flex-grow: 0;
    /* The first and last items start off as 16px + 2em, like the other ones.
     * 100% is the width of the parent, which will be at least 4 * the width of
     * an individual item (16px + 2em)
     * So 100% - 4 item widths gets us the remaining available space if
     * #context-navigation is wider than that.
     * Then divide by 6 to get the 1/6 of that extra space, and add this space
     * to the width of the first/last items.
     * This ensures that the 3 visual gaps between the 4 icons are all the same
     * size, with each 1/3 of the available space evenly distributed between
     * the 2 items on either side of the gap.
     */
    width: calc(var(--menuitem-min-width) + calc(100% - 4 * var(--menuitem-min-width)) / 6);
  }

  /* Other menu separators don't extend all the way to the menu edges, but the
     one below the navigation buttons in the content context menu should. */
  #context-sep-navigation {
    padding-inline: 0;
  }
}
